<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Lateral Thunking</title><link>http://brianbaquiran.com/</link><description>Random thoughts and stories</description><atom:link rel="self" href="http://brianbaquiran.com/rss.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 10 Jun 2017 03:16:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Installing kerasR</title><link>http://brianbaquiran.com/posts/installing-kerasr/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a quick reference to installing kerasR, a slim wrapper around &lt;a class="reference external" href="https://keras.io/"&gt;Keras&lt;/a&gt; starting with the required Python packages.&lt;/p&gt;
&lt;div class="section" id="python-packages"&gt;
&lt;h2&gt;Python packages&lt;/h2&gt;
&lt;p&gt;Create a virtualenv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ virtualenv pydata --python=/usr/bin/python3
Running virtualenv with interpreter /usr/bin/python3
Using base prefix '/usr'
New python executable in /home/brian/pydata/bin/python3
Also creating executable in /home/brian/pydata/bin/python
Installing setuptools, pip, wheel...done.
$ source pydata/bin/activate
(pydata) $
&lt;/pre&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;keras&lt;/tt&gt;. This will also install the other prerequisites for doing any sort of datasciency stuff in Python
(&lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;pandas&lt;/tt&gt;) as well as Theano. Tensorflow will be installed in the next step.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(pydata) $ pip install keras
Collecting keras
Collecting six (from keras)
Using cached six-1.10.0-py2.py3-none-any.whl
Collecting theano (from keras)
Collecting pyyaml (from keras)
Collecting scipy&amp;gt;=0.14 (from theano-&amp;gt;keras)
  Downloading scipy-0.19.0-cp35-cp35m-manylinux1_x86_64.whl (47.9MB)
    100% |████████████████████████████████| 47.9MB 27kB/s
Collecting numpy&amp;gt;=1.9.1 (from theano-&amp;gt;keras)
  Downloading numpy-1.13.0-cp35-cp35m-manylinux1_x86_64.whl (16.9MB)
    100% |████████████████████████████████| 16.9MB 66kB/s
Installing collected packages: six, numpy, scipy, theano, pyyaml, keras
Successfully installed keras-2.0.4 numpy-1.13.0 pyyaml-3.12 scipy-0.19.0 six-1.10.0 theano-0.9.0
&lt;/pre&gt;
&lt;p&gt;Install Tensorflow:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(pydata) $ pip install tensorflow
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="kerasr"&gt;
&lt;h2&gt;kerasR&lt;/h2&gt;
&lt;p&gt;In R, install the &lt;tt class="docutils literal"&gt;kerasR&lt;/tt&gt; package:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; install.packages("kerasR")
Installing package into ‘/home/brian/R/x86_64-pc-linux-gnu-library/3.4’
...
** testing if installed package can be loaded
successfully loaded keras
* DONE (kerasR)
&lt;/pre&gt;
&lt;p&gt;This may also install the &lt;tt class="docutils literal"&gt;reticulate&lt;/tt&gt; package, which is an interface to Python objects and methods.&lt;/p&gt;
&lt;p&gt;A &lt;a class="reference external" href="https://cran.r-project.org/web/packages/kerasR/vignettes/introduction.html"&gt;guide&lt;/a&gt; to using &lt;tt class="docutils literal"&gt;kerasR&lt;/tt&gt; is provided as a vignette.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="troubleshooting"&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;If you get an error message when executing &lt;tt class="docutils literal"&gt;library(kerasR)&lt;/tt&gt; saying:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt; library(kerasR)

keras not available
See reticulate::use_python() to set python path,
then use kerasR::keras_init() to retry
&lt;/pre&gt;
&lt;p&gt;this means &lt;tt class="docutils literal"&gt;kerasR&lt;/tt&gt; (or more specifically, &lt;tt class="docutils literal"&gt;reticulate&lt;/tt&gt;) can't find the &lt;tt class="docutils literal"&gt;keras&lt;/tt&gt; python package, you need to start R &lt;em&gt;after&lt;/em&gt; loading your virtualenv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ source pydata/bin/activate
(pydata) $ R
&amp;gt; library(kerasR)
Using TensorFlow backend.
successfully loaded keras
&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>machine learning</category><guid>http://brianbaquiran.com/posts/installing-kerasr/</guid><pubDate>Sat, 10 Jun 2017 00:43:10 GMT</pubDate></item><item><title>Philippine Startups Wordcloud</title><link>http://brianbaquiran.com/posts/philippine-startups-wordcloud/</link><dc:creator>Brian</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;img src="http://brianbaquiran.com/images/sfsvwordcloud.png?raw=true" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://www.reddit.com/r/dataisbeautiful/comments/6cnbil/san_francisco_startup_descriptions_vs_silicon/"&gt;San Francisco startup descriptions vs. Silicon Valley startup descriptions using Crunchbase data&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nltk.tokenize&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;word_tokenize&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nltk.corpus&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;stopwords&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;punctuation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I went to the &lt;a href="http://www.kickstart.ph/"&gt;Kickstart&lt;/a&gt; and &lt;a href="http://www.ideaspacefoundation.org"&gt;Ideaspace&lt;/a&gt; websites and scraped the descriptions of the startups they funded.&lt;/p&gt;
&lt;p&gt;And by &lt;em&gt;scraped&lt;/em&gt;, I mean I cut-and-paste stuff into a Google Sheets document.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../files/Philippine Startups - Sheet1.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;descriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Long Description'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;descriptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[4]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;0    Arthrologic designs and develops a TKA (Total ...
1    ​BluLemons Gaming Studio is an all-Filipino th...
2    Croo enables people to swiftly send informatio...
3    The Company has the opportunity to create the ...
4    Despite current transponder technologies avail...
Name: Long Description, dtype: object&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;raw_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;word_tokenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;descriptions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;stop_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stopwords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'english'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;punctuation&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;raw_words&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stop_words&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[7]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;['arthrologic',
 'designs',
 'develops',
 'total',
 'knee',
 'arthroplasty',
 'system',
 'simple',
 'evidence-based',
 'utilizing',
 'successful',
 'clinical',
 'data',
 'improve',
 'surgical',
 'skills',
 'easy-to-use',
 'surgeon-friendly',
 'instrumentation',
 'assure']&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;word_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;word_str&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[8]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;'arthrologic designs develops total knee arthroplasty system simple evidence-based utilizing successful clinical data improve surgical skills easy-to-use surgeon-friendly instrumentation assure successful predictable results offer competitive cost provide greater majority patients access technology improve living \u200bthe product asian-fit 2-component total knee arthroplasty system definitive surgical treatment severe end-stage osteoarthritic knees \u200bblulemons gaming studio all-filipino theme mobile gaming studio develop games based filipino culture \u200bthey believe creating mobile games great avenue showcase philippines offer globally vision create games impact filipino youth across cultures croo enables people swiftly send information loved ones need arises without typing anything calling anyone button accessory clicked sent predetermined emergency contacts smartphone application text message contains important information person’s current location nearby landmarks person’s contacts equipped '&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../files/phstartupwords.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Lazy-Wordcloud-Visualization"&gt;Lazy Wordcloud Visualization&lt;a class="anchor-link" href="http://brianbaquiran.com/posts/philippine-startups-wordcloud/#Lazy-Wordcloud-Visualization"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Enter the contents of the &lt;a href="http://brianbaquiran.com/posts/phstartupwords.txt"&gt;file&lt;/a&gt; generated into &lt;a href="http://www.wordclouds.com/"&gt;http://www.wordclouds.com/&lt;/a&gt;, and manually remove the words that occur less than 3 times:
&lt;img src="http://brianbaquiran.com/images/wordcloud.png?raw=true" alt=""&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><guid>http://brianbaquiran.com/posts/philippine-startups-wordcloud/</guid><pubDate>Tue, 23 May 2017 02:58:28 GMT</pubDate></item><item><title>Google Cloud Natural Language API</title><link>http://brianbaquiran.com/posts/google-cloud-natural-language-api/</link><dc:creator>Brian</dc:creator><description>&lt;a class="reference external image-reference" href="http://brianbaquiran.com/images/gdgph_nlapi.png"&gt;&lt;img alt="/images/gdgph_nlapi.thumbnail.png" src="http://brianbaquiran.com/images/gdgph_nlapi.thumbnail.png"&gt;&lt;/a&gt;</description><category>api</category><category>google</category><category>NLP</category><guid>http://brianbaquiran.com/posts/google-cloud-natural-language-api/</guid><pubDate>Thu, 27 Apr 2017 10:05:21 GMT</pubDate></item><item><title>Life Satisfaction, Two Cohorts</title><link>http://brianbaquiran.com/posts/life-satisfaction-two-cohorts/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Make sure your kids see this graph &lt;a href="https://t.co/WEZiSmzfcR"&gt;https://t.co/WEZiSmzfcR&lt;/a&gt; &lt;a href="https://t.co/pqHGoUinZz"&gt;pic.twitter.com/pqHGoUinZz&lt;/a&gt;&lt;/p&gt;— Jeff Atwood (@codinghorror) &lt;a href="https://twitter.com/codinghorror/status/852311991981035520"&gt;April 13, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/div&gt;</description><category>graphs</category><category>twitter</category><guid>http://brianbaquiran.com/posts/life-satisfaction-two-cohorts/</guid><pubDate>Thu, 13 Apr 2017 13:27:09 GMT</pubDate></item><item><title>AI PH Mixer</title><link>http://brianbaquiran.com/posts/ai-ph-mixer/</link><dc:creator>Brian</dc:creator><description>&lt;a class="reference external image-reference" href="http://brianbaquiran.com/images/ai_ph.jpg"&gt;&lt;img alt="/images/ai_ph.thumbnail.jpg" src="http://brianbaquiran.com/images/ai_ph.thumbnail.jpg"&gt;&lt;/a&gt;</description><category>AI</category><guid>http://brianbaquiran.com/posts/ai-ph-mixer/</guid><pubDate>Tue, 14 Mar 2017 09:49:02 GMT</pubDate></item><item><title>Disabling/Enabling the Asus UX303 Touchscreen in Ubuntu 16.04</title><link>http://brianbaquiran.com/posts/disablingenabling-the-asus-ux303-touchscreen/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;p&gt;Find the Atmel touchscreen device:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ xinput --list
⎡ Virtual core pointer                        id=2    [master pointer  (3)]
⎜   ↳ Virtual core XTEST pointer                      id=4    [slave  pointer  (2)]
⎜   ↳ FocalTechPS/2 FocalTech FocalTech Touchpad      id=17   [slave  pointer  (2)]
⎜   ↳ Logitech USB Optical Mouse                      id=20   [slave  pointer  (2)]
⎜   ↳ Atmel                                           id=10   [slave  pointer  (2)]
⎣ Virtual core keyboard                       id=3    [master keyboard (2)]
    ↳ Virtual core XTEST keyboard                     id=5    [slave  keyboard (3)]
    ↳ Power Button                                    id=6    [slave  keyboard (3)]
    ↳ Sleep Button                                    id=9    [slave  keyboard (3)]
    ↳ USB2.0 UVC HD Webcam                            id=13   [slave  keyboard (3)]
    ↳ Video Bus                                       id=7    [slave  keyboard (3)]
    ↳ AT Translated Set 2 keyboard                    id=16   [slave  keyboard (3)]
    ↳ Video Bus                                       id=8    [slave  keyboard (3)]
    ↳ Asus WMI hotkeys                                id=15   [slave  keyboard (3)]
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;Atmel&lt;/tt&gt; device is our touchscreen.&lt;/p&gt;
&lt;p&gt;Use the &lt;tt class="docutils literal"&gt;xinput disable&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;enable&lt;/tt&gt; commands to turn the touchscreen off or on again.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ xinput disable Atmel
$ xinput enable Atmel
&lt;/pre&gt;
&lt;p&gt;Both commands are silent, unless you specify a device that doesn't exist.&lt;/p&gt;&lt;/div&gt;</description><category>asus</category><category>linux</category><guid>http://brianbaquiran.com/posts/disablingenabling-the-asus-ux303-touchscreen/</guid><pubDate>Wed, 07 Dec 2016 06:20:23 GMT</pubDate></item><item><title>Creating EC2 keypairs with AWS CLI</title><link>http://brianbaquiran.com/posts/creating-ec2-keypairs-with-aws-cli/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;p&gt;It is easy to create EC2 keypairs with the AWS CLI:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_8bdd66d2cd6a4dc9b5d2ce44653e6a70-1"&gt;&lt;/a&gt;$ aws ec2 create-key-pair --key-name mynewkeypair &amp;gt; keystuff.json
&lt;/pre&gt;&lt;p&gt;After creating the keypair it should appear in your EC2 key pairs listing. The
&lt;tt class="docutils literal"&gt;keystuff.json&lt;/tt&gt; file will contain the RSA private key you will need to use
to connect to any instances you create with the keypair, as well as the name of
the key and its fingerprint.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_3ce97ce9b4c548338052710aaf64d530-1"&gt;&lt;/a&gt;{
&lt;a name="rest_code_3ce97ce9b4c548338052710aaf64d530-2"&gt;&lt;/a&gt;    "KeyMaterial": "-----BEGIN RSA PRIVATE KEY-----\n&amp;lt;your private key&amp;gt;==\n-----END RSA PRIVATE KEY-----",
&lt;a name="rest_code_3ce97ce9b4c548338052710aaf64d530-3"&gt;&lt;/a&gt;    "KeyName": "mynewkeypair",
&lt;a name="rest_code_3ce97ce9b4c548338052710aaf64d530-4"&gt;&lt;/a&gt;    "KeyFingerprint": "53:47:ee:01:3a:35:9b:52:1c:4f:99:6f:87:b0:0f:8b:ed:83:55:3b"
&lt;a name="rest_code_3ce97ce9b4c548338052710aaf64d530-5"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;p&gt;To extract the private key into a separate file, use the
&lt;a class="reference external" href="https://stedolan.github.io/jq/"&gt;jq JSON filter&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_753d28660e64448182d9aaa4113edf3f-1"&gt;&lt;/a&gt;$ jq &lt;span class="s1"&gt;'.KeyMaterial'&lt;/span&gt; keystuff.json --raw &amp;gt; mynewkey.pem
&lt;/pre&gt;&lt;/div&gt;</description><category>AWS</category><category>JSON</category><category>tips</category><guid>http://brianbaquiran.com/posts/creating-ec2-keypairs-with-aws-cli/</guid><pubDate>Thu, 29 Sep 2016 10:48:37 GMT</pubDate></item><item><title>GitLab Weirdness</title><link>http://brianbaquiran.com/posts/gitlab-weirdness/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;p&gt;If you're using GitLab.com for hosting your repositories, you may have encountered
a strange problem wherein your newly-created repository's dashboard doesn't update.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://brianbaquiran.com/images/gitlab-weirdness.png"&gt;&lt;img alt="/images/gitlab-weirdness.thumbnail.png" src="http://brianbaquiran.com/images/gitlab-weirdness.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;That is, when you &lt;cite&gt;git push&lt;/cite&gt; your changes to the repository, the interface still
looks like a newly-created repository, and neither your files nor your commits
are visible in the web UI. This is weird because the remote repository works in
all other respects. You can push code up to it, clone it, etc. You just can't see
it on the GitLab website.&lt;/p&gt;
&lt;p&gt;I've seen this happen a couple of times, and so far I've found that the quick fix is to
run Housekeeping on the repository from the Edit Project page.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://brianbaquiran.com/images/gitlab-housekeeping.png"&gt;&lt;img alt="/images/gitlab-housekeeping.thumbnail.png" src="http://brianbaquiran.com/images/gitlab-housekeeping.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;Housekeeping can take a couple of minutes but most of the time it works and you
can see your repository's files and commit history after running it. If it
doesn't work, you have to delete the repository in GitLab and re-create it,
pushing your code up again.&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>tips</category><guid>http://brianbaquiran.com/posts/gitlab-weirdness/</guid><pubDate>Wed, 28 Sep 2016 07:35:40 GMT</pubDate></item><item><title>Installing Python 2.7.11 on CentOS 7</title><link>http://brianbaquiran.com/posts/installing-python-2711-on-centos-7/</link><dc:creator>Brian</dc:creator><description>&lt;div&gt;&lt;p&gt;CentOS 7 ships with python 2.7.5 by default. We have some software that requires 2.7.11. It's generally a bad idea to clobber your system python, since other system-supplied software may rely on it being a particular version.&lt;/p&gt;
&lt;p&gt;Our strategy for running 2.7.11 alongside the system python is to build it from source, then create virtualenvs that will run our software.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://brianbaquiran.com/posts/installing-python-2711-on-centos-7/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>centos</category><category>linux</category><category>pydata</category><category>python</category><guid>http://brianbaquiran.com/posts/installing-python-2711-on-centos-7/</guid><pubDate>Mon, 23 May 2016 11:17:07 GMT</pubDate></item><item><title>The Business of Big Data Analytics Meetup #3</title><link>http://brianbaquiran.com/posts/the-business-of-big-data-analytics-meetup-3/</link><dc:creator>Brian</dc:creator><description>&lt;a class="reference external image-reference" href="http://brianbaquiran.com/images/meetup_business_of_big_data_analytics.jpg"&gt;&lt;img alt="/images/meetup_business_of_big_data_analytics.thumbnail.jpg" src="http://brianbaquiran.com/images/meetup_business_of_big_data_analytics.thumbnail.jpg"&gt;&lt;/a&gt;</description><guid>http://brianbaquiran.com/posts/the-business-of-big-data-analytics-meetup-3/</guid><pubDate>Thu, 11 Feb 2016 02:14:39 GMT</pubDate></item></channel></rss>