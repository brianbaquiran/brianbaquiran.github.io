<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Lateral Thunking</title><link>http://brianbaquiran.github.io/</link><description>Random thoughts and stories</description><atom:link rel="self" href="http://brianbaquiran.github.io/rss.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 11 Feb 2016 02:39:03 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Business of Big Data Analytics Meetup #3</title><link>http://brianbaquiran.github.io/posts/the-business-of-big-data-analytics-meetup-3/</link><dc:creator>Brian Baquiran</dc:creator><description>&lt;a class="reference external image-reference" href="http://brianbaquiran.github.io/images/meetup_business_of_big_data_analytics.jpg"&gt;&lt;img alt="/images/meetup_business_of_big_data_analytics.thumbnail.jpg" src="http://brianbaquiran.github.io/images/meetup_business_of_big_data_analytics.thumbnail.jpg"&gt;&lt;/a&gt;</description><guid>http://brianbaquiran.github.io/posts/the-business-of-big-data-analytics-meetup-3/</guid><pubDate>Thu, 11 Feb 2016 02:14:39 GMT</pubDate></item><item><title>namedtuple Comes in Handy</title><link>http://brianbaquiran.github.io/posts/namedtuple-comes-in-handy/</link><dc:creator>Brian Baquiran</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been writing a lot of Python code recently. Oftentimes I struggle with what a method should return when I have to relay more than one value back to the caller. For example:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;PaymentGateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-3"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-4"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        Perform some transaction against the API.&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :return: whether the transaction was successful or not&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-7"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :rtype: bool&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        """&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-9"&gt;&lt;/a&gt;        &lt;span class="c"&gt;# stuff happens here&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-10"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-11"&gt;&lt;/a&gt;            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx_details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-12"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success: CODE=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; Details=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-13"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;GatewayException&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-15"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed: ERROR=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; reason=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_8fd8c4283b364f878f9f0c825931058c-16"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The code that calls &lt;code&gt;do_transaction&lt;/code&gt; might look like this:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payment_gw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;service_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ref_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-2"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Hooray! Succe$$!&lt;/span&gt;
&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; was successful. Check logs for status code."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-5"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Boo&lt;/span&gt;
&lt;a name="rest_code_cf2d6906a4834e0d9a431169574754b4-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_failure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed. I don't know why..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Many times this is fine, but what if the caller needs the details from the &lt;code&gt;amount_transaction&lt;/code&gt; result or the &lt;code&gt;GatewayException&lt;/code&gt;? A quick solution is to return a &lt;code&gt;dict&lt;/code&gt; :&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8e860874700b4816837f333606020ead-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;PaymentGateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-3"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-4"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        Perform some transaction against the API.&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :return: a dict that contains keys 'success', 'code', and 'detail'&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-7"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :rtype: dict&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        """&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-9"&gt;&lt;/a&gt;        &lt;span class="c"&gt;# stuff happens here&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-10"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-11"&gt;&lt;/a&gt;            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx_details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-12"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success: CODE=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; Details=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-13"&gt;&lt;/a&gt;            &lt;span class="n"&gt;success_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-14"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-15"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-16"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-17"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-18"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;success_dict&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-19"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;GatewayException&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-20"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed: ERROR=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; reason=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-21"&gt;&lt;/a&gt;            &lt;span class="n"&gt;error_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-22"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-23"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-24"&gt;&lt;/a&gt;                &lt;span class="s"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-25"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8e860874700b4816837f333606020ead-26"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;error_dict&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;It works but it's pretty ad-hoc. The structure of whatever &lt;code&gt;do_transaction&lt;/code&gt; returns won't be obvious unless you dig into the code. The caller will end up like:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;payment_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payment_gw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;service_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ref_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-3"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Hooray! Succe$$!&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; was successful, status code &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-6"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Boo&lt;/span&gt;
&lt;a name="rest_code_cfb14b76daf1485ea9d7fbf426cc5885-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_failure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed, because: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now the caller is poluted with literal strings like &lt;code&gt;'success'&lt;/code&gt;, &lt;code&gt;'code'&lt;/code&gt; and &lt;code&gt;'status'&lt;/code&gt;. These can be hell to debug, specially if you happen to misspell one of them in your code. Even if you're using an awesome IDE like &lt;a class="reference external" href="http://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An altenative to defining these ad-hoc dict structures is to use &lt;a class="reference external" href="https://docs.python.org/2/library/collections.html#collections.namedtuple"&gt;namedtuple&lt;/a&gt; from the collections package.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;PaymentStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PaymentStatus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;PaymentGateway&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-7"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        Perform some transaction against the API.&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-10"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :return: whether the transaction was successful or not&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-11"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        :rtype: PaymentStatus&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-12"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        """&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-13"&gt;&lt;/a&gt;        &lt;span class="c"&gt;# stuff happens here&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-15"&gt;&lt;/a&gt;            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx_details&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-16"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success: CODE=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; Details=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-17"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PaymentStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-18"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;GatewayException&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-19"&gt;&lt;/a&gt;            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed: ERROR=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; reason=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_960fec87e19c48768e357d3e9e7bf071-20"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PaymentStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;namedtuple&lt;/code&gt; forces us to be explicit about what &lt;code&gt;do_transaction&lt;/code&gt; returns. And &lt;a class="reference external" href="http://www.thezenofpython.com/"&gt;explicit is better than implicit&lt;/a&gt;. For the caller, this looks like:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;payment_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payment_gw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bill_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;service_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ref_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-3"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Hooray! Succe$$!&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; was successful, status code &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-6"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# Boo&lt;/span&gt;
&lt;a name="rest_code_b64f0874977f4f898111f4c600ab05a0-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;report_failure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Transaction failed, because: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;payment_status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This is almost as simple as our first example, and is free of string literals. And if you're using PyCharm, you can take advantage of the code completion which will know about the attributes of your new &lt;code&gt;namedtuple&lt;/code&gt; class:&lt;/p&gt;
&lt;img alt="/images/pycharm_namedtuple.png" src="http://brianbaquiran.github.io/images/pycharm_namedtuple.png"&gt;&lt;p&gt;So if your code is littered with string literals as keys for return values from methods that return &lt;code&gt;dict&lt;/code&gt;, consider having them return a &lt;code&gt;namedtuple&lt;/code&gt; instead.&lt;/p&gt;&lt;/div&gt;</description><category>coding</category><category>namedtuple</category><category>PyCharm</category><category>python</category><guid>http://brianbaquiran.github.io/posts/namedtuple-comes-in-handy/</guid><pubDate>Sun, 20 Dec 2015 00:58:42 GMT</pubDate></item><item><title>Tidy Aliens</title><link>http://brianbaquiran.github.io/posts/alien-employment-permit-dataset/</link><dc:creator>Brian Baquiran</dc:creator><description>&lt;div&gt;&lt;a class="reference external image-reference" href="http://brianbaquiran.github.io/images/aliens.png"&gt;&lt;img alt="/images/aliens.thumbnail.png" src="http://brianbaquiran.github.io/images/aliens.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://www.ble.dole.gov.ph/"&gt;Bureau of Local Employment&lt;/a&gt; issues working permits to foreign nationals that want to work in the Philippines. Ever wondered which nationalities obtain the most permits? I used public data from the BLE in a &lt;a class="reference external" href="http://brianbaquiran.github.io/stories/tidying-alien-work-permit-dataset/"&gt;data cleanup and visualization exercise&lt;/a&gt; using R’s reshape, dplyr and ggplot2.&lt;/p&gt;&lt;/div&gt;</description><category>dplyr</category><category>ggplot2</category><category>R Language</category><category>visualization</category><guid>http://brianbaquiran.github.io/posts/alien-employment-permit-dataset/</guid><pubDate>Sun, 29 Nov 2015 01:40:54 GMT</pubDate></item><item><title>The Art of Data Science</title><link>http://brianbaquiran.github.io/posts/the-art-of-data-science/</link><dc:creator>Brian Baquiran</dc:creator><description>&lt;div&gt;&lt;a class="reference external image-reference" href="http://brianbaquiran.github.io/images/art-of-data-science-book.png"&gt;&lt;img alt="/images/art-of-data-science-book.thumbnail.png" src="http://brianbaquiran.github.io/images/art-of-data-science-book.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;I will admit, I was pretty stoked yesterday when &lt;a class="reference external" href="http://www.biostat.jhsph.edu/~rpeng/"&gt;Roger Peng&lt;/a&gt; retweeted my announcement that his new book was available.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;. &lt;a href="https://twitter.com/rdpeng"&gt;@rdpeng&lt;/a&gt;'s new book "The Art of Data Science" is now available on &lt;a href="https://twitter.com/leanpub"&gt;@leanpub&lt;/a&gt;. Get it at &lt;a href="https://t.co/nA606G715i"&gt;https://t.co/nA606G715i&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/datascience?src=hash"&gt;#datascience&lt;/a&gt;&lt;/p&gt;— Brian Baquiran (@brianbaquiran) &lt;a href="https://twitter.com/brianbaquiran/status/669022777035243520"&gt;November 24, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;p&gt;In the book, Peng and co-author Elizabeth Matsui walk us through the different activites of data analysis, from formulating questions, basic exploratory data analysis to get a rough feel for the data, to modelling the data with familiar distributions through to basic inference and prediction.&lt;/p&gt;
&lt;p&gt;Using R and the datasets that come bundled with it, Peng and Matsui demonstrate how each activity is actually an iterative process itself. At each stage, it's important to evaluate what you already know (or think you know) and revise your expectations based on the data.&lt;/p&gt;&lt;/div&gt;</description><category>books</category><category>datascience</category><guid>http://brianbaquiran.github.io/posts/the-art-of-data-science/</guid><pubDate>Wed, 25 Nov 2015 12:16:28 GMT</pubDate></item><item><title>Hello, World!</title><link>http://brianbaquiran.github.io/posts/hello-world/</link><dc:creator>Brian Baquiran</dc:creator><description>&lt;pre class="code c"&gt;&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* Hello World program */&lt;/span&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_8f136937e3364d57a45703c44273ff2a-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;</description><category>programming</category><guid>http://brianbaquiran.github.io/posts/hello-world/</guid><pubDate>Sun, 25 Oct 2015 05:02:45 GMT</pubDate></item></channel></rss>